version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - GITHUB_ID=${GITHUB_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - NODE_ENV=development
    volumes:
      - ./:/app
      - /app/node_modules
      - /app/.next
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
      - image-puller

  # Pre-pull necessary containers to have them available via the mounted Docker socket
  image-puller:
    image: docker:24-cli
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      sh -c "docker pull node:18-alpine &&
             docker pull python:3.11-alpine &&
             docker pull openjdk:17-slim"

  # Database
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data: